{"version":3,"sources":["components/InputGroup.js","components/Multiselect.js","components/InputForm.js","components/ResultEntry.js","components/Results.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["InputGroup","props","className","label","type","value","onChange","e","preventDefault","setVal","target","placeholder","Multiselect","useState","options","setOptions","curSearch","setCurSearch","searchResults","setSearchResults","useEffect","genres","displaySearchResults","map","result","index","onClick","val","includes","setGenres","selectedGenres","genre","newGenres","filter","toLowerCase","onRemoveGenre","EmptyOrResults","length","filteredOptions","option","indexOf","InputForm","loading","setLoading","origin","setOrigin","destination","setDestination","keywords","setKeywords","handleClick","fetch","URLSearchParams","then","res","json","data","console","log","setError","error","setResults","playlist","SubmitButton","ResultEntry","title","songProps","artist","Results","results","RenderErrorOrSuccess","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8066d52.chunk.js","sourcesContent":["function InputGroup(props) {\n  function handleChange(e) {\n    e.preventDefault();\n    props.setVal(e.target.value);\n  }\n\n  return (\n    <div>\n      <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-blueGray-600 bg-blueGray-200 uppercase last:mr-0 mr-1 mb-2\">\n        {props.label}\n      </span>\n      <input type=\"text\" value={props.value} onChange={handleChange}\n        placeholder={props.placeholder} className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\" />\n    </div>\n\n  );\n}\n\nexport default InputGroup;\n","import { useState, useEffect } from 'react';\r\nimport InputGroup from './InputGroup';\r\nimport genres from './genres.json';\r\n\r\nfunction Multiselect(props) {\r\n  // a multiselect component used for selecting multiple genres\r\n  const [options, setOptions] = useState(['Pop', 'Party', 'Disco']);\r\n  const [curSearch, setCurSearch] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOptions(genres.genres);\r\n  }, []);\r\n\r\n  function onSearchChange(val) {\r\n    setCurSearch(val);\r\n    const filteredOptions = options.filter(\r\n      (option) => option.toLowerCase().indexOf(curSearch.toLowerCase()) > -1\r\n    );\r\n    setSearchResults(filteredOptions);\r\n  }\r\n\r\n  function onClickResult(val) {\r\n    setCurSearch('');\r\n    if (!props.genres.includes(val)) {\r\n      props.setGenres([...props.genres, val]);\r\n    }\r\n    setSearchResults([]);\r\n  }\r\n\r\n  function onRemoveGenre(val) {\r\n    const newGenres = props.genres.filter(\r\n      (genre) => genre.toLowerCase() !== val.toLowerCase()\r\n    );\r\n    props.setGenres(newGenres);\r\n  }\r\n\r\n  const displaySearchResults = searchResults.map((result, index) =>\r\n    <div className=\"cursor-pointer py-3 px-2 shadow-sm\" onClick={() => onClickResult(result)} key={index}>{result}</div>\r\n  );\r\n\r\n  const selectedGenres = props.genres.map((genre, index) =>\r\n    <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-white bg-blueGray-500 uppercase last:mr-0 mr-1 mb-2\" key={index}>\r\n      {genre}\r\n      <span className=\"cursor-pointer py-1 px-2\" onClick={() => onRemoveGenre(genre)}> x</span>\r\n    </span>\r\n  );\r\n\r\n  function EmptyOrResults() {\r\n    if (searchResults.length > 0) {\r\n      return <div className=\"bg-white text-blueGray-600 rounded text-sm shadow h-36 overflow-auto\">\r\n        {displaySearchResults}\r\n      </div>\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup label=\"Genres\" placeholder=\"Dance\" value={curSearch} setVal={onSearchChange} />\r\n      <EmptyOrResults />\r\n      <div className=\"mt-2\">\r\n        {selectedGenres}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Multiselect;\r\n","import InputGroup from './InputGroup';\r\nimport Multiselect from './Multiselect';\r\nimport { useState } from 'react';\r\n\r\nfunction InputForm(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [origin, setOrigin] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [keywords, setKeywords] = useState('');\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    fetch('/search?' + new URLSearchParams({\r\n      'origin': origin,\r\n      'destination': destination,\r\n      'genres': genres,\r\n      'keywords': keywords\r\n    })).then(res => res.json()).then(data => {\r\n      console.log(data)\r\n      props.setError(data.error)\r\n      props.setResults(data.playlist)\r\n      setLoading(false)\r\n    });\r\n  }\r\n\r\n  function SubmitButton() {\r\n    let SubmitButton;\r\n    if (loading) {\r\n      SubmitButton = <button className=\"opacity-50 cursor-not-allowed bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-base px-8 py-3 rounded shadow-md hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150 mt-10\" type=\"button\">\r\n        Loading...\r\n    </button>\r\n    } else {\r\n      SubmitButton = <button onClick={handleClick} className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-base px-8 py-3 rounded shadow-md hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150 mt-10\" type=\"button\">\r\n        Generate Playlist\r\n    </button>\r\n    }\r\n    return SubmitButton;\r\n  }\r\n\r\n  return (\r\n    <div className=\"InputForm container mx-auto lg:px-10 lg:pt-20 relative top-5 \">\r\n      <div className=\"mb-3 bg-gray-50 rounded-md shadow-lg\">\r\n        <form className=\"px-10 py-10\">\r\n          <h2 className=\"text-2xl text-blueGray-600 pb-5\">Generate the perfect playlist for your roadtrip.</h2>\r\n          <div className=\"grid gap-4 grid-cols-2\">\r\n            <InputGroup label=\"Origin\" placeholder=\"New York\" value={origin} setVal={setOrigin} />\r\n            <InputGroup label=\"Destination\" placeholder=\"Ithaca\" value={destination} setVal={setDestination} />\r\n          </div>\r\n          <div className=\"grid gap-4 grid-cols-2 mt-10\">\r\n            <Multiselect genres={genres} setGenres={setGenres} />\r\n            <InputGroup label=\"Keywords\" placeholder=\"School, class...\" value={keywords} setVal={setKeywords} />\r\n          </div>\r\n          <SubmitButton />\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n","function ResultEntry(props) {\n  const title = props.songProps[0];\n  const artist = props.songProps[1];\n  //const score = props.songProps[2];\n  return (\n    <div className=\"mb-3 bg-white rounded-md shadow lg:px-5 lg:py-5 lg:w-2/3 mx-auto flex lg:gap-10\">\n      <div className=\"test\">\n        <div className=\"items-center h-14 w-14 justify-center\">\n          <p className=\"text-center leading-10 mt-1 text-blueGray-400 text-xl font-light\">{props.index + 1}</p>\n        </div>\n      </div>\n      <div className=\"test2\">\n        <h4 className=\"font-sans font-semibold text-2xl\">{title}</h4>\n        <h5 className=\"font-sans text-xl\">{artist}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default ResultEntry;\n","import ResultEntry from './ResultEntry';\n\nfunction Results(props) {\n  const playlist = props.results.map((result, index) =>\n    <ResultEntry songProps={result} index={index} key={index} />\n  );\n\n  function RenderErrorOrSuccess() {\n    if (props.error) {\n      return <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-red-600 bg-red-200 uppercase last:mr-0 mr-1\">\n        {props.error}\n      </span>\n    }\n    else {\n      return <h2 className=\"font-customStack text-4xl pb-3 text-center lg:pt-12 lg:pb-12\">🎶 your playlist</h2>\n    }\n  }\n\n  return (\n    <div className=\"mb-3 bg-white rounded-md shadow-lg lg:px-5 lg:py-5 lg:w-2/3 mx-auto\">\n      <RenderErrorOrSuccess />\n      <div>\n        {playlist}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","function Footer() {\r\n  return (\r\n    <div className=\"mt-3 lg:px-5 lg:py-5 lg:w-2/3 mx-auto text-center\">\r\n      <p>Team: Michael Noor (mn598), Joy Chen (jhc287), Jyne Dunbar (jcd322), Rachel Lu (rbl83), Vladia Trinh (vt95)</p>\r\n      <p>\r\n        <a className=\"underline\" href=\"https://traffic-jams-v1.herokuapp.com/\">Prototype 1</a> | <a className=\"underline\" href=\"https://traffic-jams.herokuapp.com/\">Prototype 2</a></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import InputForm from './components/InputForm';\nimport Results from './components/Results';\nimport Footer from './components/Footer';\nimport { useState } from 'react';\n\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('Type in a query to get started');\n\n  return (\n    <div className=\"App bg-blueGray-100\">\n      <div className=\"bg-hero-custom bg-center container mx-auto lg:px-40\">\n        <div className=\"bg-white px-8 py-6 w-max -mt-2 rounded-md shadow-lg\">\n          <h1 className=\"font-customStack text-4xl\">\n            🚦 traffic jams\n          </h1>\n        </div>\n        <InputForm\n          setResults={setResults}\n          setError={setError}\n        />\n      </div>\n      <div className=\"-mt-5 lg:px-40 py-20\">\n        <Results\n          error={error}\n          results={results}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}