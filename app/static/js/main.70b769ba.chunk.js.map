{"version":3,"sources":["components/InputGroup.js","components/SearchDropdownResults.js","components/InputCity.js","components/Multiselect.js","components/InputForm.js","components/ResultEntry.js","components/Results.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["InputGroup","props","DisplayRequired","required","className","DisplayHeader","header","label","type","value","onChange","e","preventDefault","setVal","target","placeholder","SearchDropdownResults","displaySearchResults","searchResults","map","result","index","onClick","onClickResult","EmptyOrResults","length","InputCity","useState","setSearchResults","useEffect","filteredOptions","options","filter","option","toLowerCase","indexOf","val","Multiselect","setOptions","curSearch","setCurSearch","genres","selectedGenres","genre","newGenres","setGenres","onRemoveGenre","includes","InputForm","loading","setLoading","origin","setOrigin","destination","setDestination","keywords","setKeywords","handleClick","cities","fetch","URLSearchParams","then","res","json","data","console","log","setError","error","setResults","playlist","catch","SubmitButton","ResultEntry","title","songProps","artist","Results","results","RenderErrorOrSuccess","Footer","href","App","citiesList","setCitiesList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b769ba.chunk.js","sourcesContent":["function InputGroup(props) {\n  function handleChange(e) {\n    e.preventDefault();\n    props.setVal(e.target.value);\n  }\n\n  function DisplayRequired() {\n    if (props.required) {\n      return <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-red-600 bg-red-200 uppercase last:mr-0 mr-1 mb-2\">\n        Required\n    </span>\n    } else {\n      return null;\n    }\n  }\n\n  function DisplayHeader() {\n    if (props.header) {\n      return <h3 className=\"text-2xl font-bold text-blueGray-600 pb-5 text-center\">{props.header}</h3>\n    } else {\n      return <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-blueGray-600 bg-blueGray-200 uppercase last:mr-0 mr-1 mb-2\">\n        {props.label}\n      </span>;\n    }\n  }\n\n\n  return (\n    <div>\n      <DisplayHeader />\n      <DisplayRequired />\n      <input type=\"text\" value={props.value} onChange={handleChange}\n        placeholder={props.placeholder} className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\" />\n    </div>\n\n  );\n}\n\nexport default InputGroup;\n","function SearchDropdownResults(props) {\n  const displaySearchResults = props.searchResults.map((result, index) =>\n    <div className=\"cursor-pointer py-3 px-2 shadow-sm\" onClick={() => props.onClickResult(result)} key={index}>{result}</div>\n  );\n\n  function EmptyOrResults() {\n    if (props.searchResults.length > 0) {\n      return <div className=\"bg-white text-blueGray-600 rounded text-sm shadow h-36 overflow-auto\">\n        {displaySearchResults}\n      </div>\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div>\n      <EmptyOrResults />\n    </div>\n  );\n}\n\nexport default SearchDropdownResults;\n","import { useState, useEffect } from 'react';\nimport InputGroup from './InputGroup';\nimport SearchDropdownResults from './SearchDropdownResults';\n\nfunction InputCity(props) {\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (props.value.length > 0) {\n      const filteredOptions = props.options.filter(\n        (option) => option.toLowerCase().indexOf(props.value.toLowerCase()) > -1\n      );\n      if (filteredOptions.length > 0 && filteredOptions[0] !== props.value) {\n        setSearchResults(filteredOptions);\n      }\n    }\n  }, [props.value, props.options]);\n\n  function onClickResult(val) {\n    props.setVal(val);\n    setSearchResults([]);\n  }\n\n  return (\n    <div>\n      <InputGroup label={props.label} placeholder={props.placeholder} value={props.value} setVal={props.setVal} required={true} />\n      <SearchDropdownResults searchResults={searchResults} onClickResult={onClickResult} />\n    </div>\n\n  );\n}\n\nexport default InputCity;\n","import { useState, useEffect } from 'react';\r\nimport InputGroup from './InputGroup';\r\nimport SearchDropdownResults from './SearchDropdownResults';\r\nimport genres from './genres.json';\r\n\r\nfunction Multiselect(props) {\r\n  // a multiselect component used for selecting multiple genres\r\n  const [options, setOptions] = useState(['Pop', 'Party', 'Disco']);\r\n  const [curSearch, setCurSearch] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOptions(genres.genres);\r\n  }, []);\r\n\r\n  function onSearchChange(val) {\r\n    setCurSearch(val);\r\n    const filteredOptions = options.filter(\r\n      (option) => option.toLowerCase().indexOf(curSearch.toLowerCase()) > -1\r\n    );\r\n    setSearchResults(filteredOptions);\r\n  }\r\n\r\n  function onClickResult(val) {\r\n    setCurSearch('');\r\n    if (!props.genres.includes(val)) {\r\n      props.setGenres([...props.genres, val]);\r\n    }\r\n    setSearchResults([]);\r\n  }\r\n\r\n  function onRemoveGenre(val) {\r\n    const newGenres = props.genres.filter(\r\n      (genre) => genre.toLowerCase() !== val.toLowerCase()\r\n    );\r\n    props.setGenres(newGenres);\r\n  }\r\n\r\n  const selectedGenres = props.genres.map((genre, index) =>\r\n    <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-white bg-blueGray-500 uppercase last:mr-0 mr-1 mb-2\" key={index}>\r\n      {genre}\r\n      <span className=\"cursor-pointer py-1 px-2\" onClick={() => onRemoveGenre(genre)}> x</span>\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup label=\"Genres\" placeholder=\"Dance\" value={curSearch} setVal={onSearchChange} required={true} />\r\n      <SearchDropdownResults searchResults={searchResults} onClickResult={onClickResult} />\r\n      <div className=\"mt-2\">\r\n        {selectedGenres}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Multiselect;\r\n","import InputGroup from './InputGroup';\r\nimport InputCity from './InputCity';\r\nimport Multiselect from './Multiselect';\r\nimport { useState } from 'react';\r\n\r\nfunction InputForm(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [origin, setOrigin] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [keywords, setKeywords] = useState('');\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    if (props.cities.includes(origin) && props.cities.includes(destination)) {\r\n      setLoading(true);\r\n      fetch('/search?' + new URLSearchParams({\r\n        'origin': origin,\r\n        'destination': destination,\r\n        'genres': genres,\r\n        'keywords': keywords\r\n      })).then(res => res.json()).then(data => {\r\n        console.log(data);\r\n        props.setError(data.error);\r\n        props.setResults(data.playlist);\r\n        setLoading(false);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        props.setError(\"Error: Check your network connection or inputs.\");\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      props.setError(\"Error: Make sure you clicked on cities in the dropdown.\");\r\n    }\r\n  }\r\n\r\n  function SubmitButton() {\r\n    let SubmitButton;\r\n    if (loading) {\r\n      SubmitButton = <button className=\"opacity-50 cursor-not-allowed bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-base px-8 py-3 rounded shadow-md hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150 mt-10\" type=\"button\">\r\n        Loading...\r\n    </button>\r\n    } else {\r\n      SubmitButton = <button onClick={handleClick} className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-base px-8 py-3 rounded shadow-md hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150 mt-10\" type=\"button\">\r\n        Generate Playlist\r\n    </button>\r\n    }\r\n    return SubmitButton;\r\n  }\r\n\r\n  return (\r\n    <div className=\"InputForm container mx-auto lg:px-10 lg:pt-20 relative top-5 \">\r\n      <div className=\"mb-3 bg-gray-50 rounded-md shadow-lg\">\r\n        <form className=\"px-10 py-10\">\r\n          <div className=\"grid gap-4 grid-cols-\">\r\n            <InputGroup label=\"Input\" placeholder=\"School, class, books, study...\" value={keywords} setVal={setKeywords} header={\"Input any words to shape the theme of your playlist.\"} />\r\n          </div>\r\n          <p className=\"text-blueGray-500 pb-5 mt-5\">Where are you going? Please make sure you click on cities and genres from the dropdowns with your mouse.</p>\r\n          <div className=\"grid gap-4 grid-cols-2\">\r\n            <InputCity options={props.cities} label=\"Origin\" placeholder=\"New York\" value={origin} setVal={setOrigin} />\r\n            <InputCity options={props.cities} label=\"Destination\" placeholder=\"Chicago\" value={destination} setVal={setDestination} />\r\n          </div>\r\n          <div className=\"grid gap-4 grid-cols-1 mt-5\">\r\n            <Multiselect genres={genres} setGenres={setGenres} />\r\n          </div>\r\n          <SubmitButton />\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n","function ResultEntry(props) {\r\n  const title = props.songProps[0];\r\n  const artist = props.songProps[1];\r\n  const score = props.songProps[2];\r\n  const lyric = props.songProps[3];\r\n\r\n  function DisplayLyric() {\r\n    if (lyric.length > 0) {\r\n      return <p>{lyric}</p>\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3 bg-white rounded-md shadow lg:px-5 lg:py-5 lg:w-2/3 mx-auto\">\r\n      <div className=\"grid lg:grid-cols-6 lg:gap-1\">\r\n        <div className=\"test\">\r\n          <div className=\"items-center h-14 w-14 justify-center\">\r\n            <p className=\"text-center leading-10 mt-1 text-blueGray-400 text-xl font-light\">{props.index + 1}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"lg:col-span-5\">\r\n          <h4 className=\"font-sans font-semibold text-2xl\">{title}</h4>\r\n          <h5 className=\"font-sans text-xl\">{artist}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultEntry;\r\n","import ResultEntry from './ResultEntry';\r\n\r\nfunction Results(props) {\r\n  const playlist = props.results.map((result, index) =>\r\n    <ResultEntry songProps={result} index={index} key={index} />\r\n  );\r\n\r\n  function RenderErrorOrSuccess() {\r\n    if (props.error) {\r\n      return <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded text-red-600 bg-red-200 uppercase last:mr-0 mr-1\">\r\n        {props.error}\r\n      </span>\r\n    }\r\n    else {\r\n      return <div>\r\n        <h2 className=\"font-customStack text-4xl pb-3 text-center lg:pt-12 lg:pb-12\">🎶 your playlist</h2>\r\n        <div className=\"grid lg:grid-cols-6 lg:gap-1 mb-3 bg-white lg:px-5 lg:py-5 lg:w-2/3 mx-auto\">\r\n          <div>Rank</div>\r\n          <div className=\"lg:col-span-4\">Song</div>\r\n          <div>Score</div>\r\n        </div>\r\n      </div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3 bg-white rounded-md shadow-lg lg:px-5 lg:py-5 lg:w-2/3 mx-auto\">\r\n      <RenderErrorOrSuccess />\r\n      <div>\r\n        {playlist}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","function Footer() {\r\n  return (\r\n    <div className=\"mt-3 lg:px-5 lg:py-5 lg:w-2/3 mx-auto text-center\">\r\n      <p>Team: Michael Noor (mn598), Joy Chen (jhc287), Jyne Dunbar (jcd322), Rachel Lu (rbl83), Vladia Trinh (vt95)</p>\r\n      <p>\r\n        <a className=\"underline\" href=\"https://traffic-jams-v1.herokuapp.com/\">Prototype 1</a> | <a className=\"underline\" href=\"https://traffic-jams-v2.herokuapp.com/\">Prototype 2</a> | <a className=\"underline\" href=\"https://traffic-jams.herokuapp.com/\">Prototype 3</a></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import InputForm from './components/InputForm';\nimport Results from './components/Results';\nimport Footer from './components/Footer';\nimport { useState, useEffect } from 'react';\nimport cities from './components/cities.json';\n\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('Type in a query to get started');\n  const [citiesList, setCitiesList] = useState(['Chicago', 'New York']);\n\n  useEffect(() => {\n    setCitiesList(cities.cities);\n  }, []);\n\n  return (\n    <div className=\"App bg-blueGray-100\">\n      <div className=\"bg-hero-custom bg-center container mx-auto lg:px-40\">\n        <div className=\"bg-white px-8 py-6 w-max -mt-2 rounded-md shadow-lg\">\n          <h1 className=\"font-customStack text-4xl\">\n            🚦 traffic jams\n          </h1>\n\n          <h2 className=\"text-2xl text-blueGray-600 mt-5\">Generate the perfect playlist for your roadtrip.</h2>\n        </div>\n        <InputForm\n          setResults={setResults}\n          setError={setError}\n          cities={citiesList}\n        />\n      </div>\n      <div className=\"-mt-5 lg:px-40 py-20\">\n        <Results\n          error={error}\n          results={results}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}